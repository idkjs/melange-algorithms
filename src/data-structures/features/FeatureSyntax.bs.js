// Generated by Melange
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function Add(Config) {
  var get = function (ds, i) {
    var n = Curry._1(Config.length, ds);
    if (i < 0 || i >= n) {
      return ;
    } else {
      return Caml_option.some(Curry._2(Config.get, ds, i));
    }
  };
  var $$Array = {
    get: get
  };
  var Syntax = {
    $$Array: $$Array
  };
  var get$1 = function (optDs, i) {
    if (optDs === undefined) {
      return ;
    }
    var ds = Caml_option.valFromOption(optDs);
    var n = Curry._1(Config.length, ds);
    if (i < 0 || i >= n) {
      return ;
    } else {
      return Caml_option.some(Curry._2(Config.get, ds, i));
    }
  };
  var $$Array$1 = {
    get: get$1
  };
  var SyntaxNested = {
    $$Array: $$Array$1
  };
  var $$Array$2 = {
    get: Config.get
  };
  var SyntaxExn = {
    $$Array: $$Array$2
  };
  var $$Array$3 = {};
  var SyntaxReset = {
    $$Array: $$Array$3
  };
  return {
          Syntax: Syntax,
          SyntaxNested: SyntaxNested,
          SyntaxExn: SyntaxExn,
          SyntaxReset: SyntaxReset
        };
}

exports.Add = Add;
/* No side effect */
