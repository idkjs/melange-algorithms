// Generated by Melange
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Stdlib = require("bs-platform/lib/js/stdlib.js");
var Exceptions = require("../Exceptions.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var GeneralBinarySearch = require("./GeneralBinarySearch.bs.js");

function searchi(get, compare, testCompare, first, last, param) {
  if (first <= last) {
    var getMiddle = function (first, last) {
      return first + ((last - first | 0) / 2 | 0) | 0;
    };
    var $$continue = function (first, last) {
      return Stdlib.abs(first - last | 0) > 1;
    };
    return GeneralBinarySearch.search(get, getMiddle, $$continue, compare, testCompare, first, last, undefined);
  }
  throw {
        RE_EXN_ID: Exceptions.InvalidArguments,
        _1: "BinarySearch.searchi",
        _2: "~last must be greater than or equal to ~first, but ~first was '" + (String(first) + ("' and ~last was '" + (String(last) + "'"))),
        Error: new Error()
      };
}

function search(get, compare, testCompare, first, last, param) {
  var i = searchi(get, compare, testCompare, first, last, undefined);
  if (i !== undefined) {
    return Caml_option.some(Curry._1(get, i));
  }
  
}

exports.searchi = searchi;
exports.search = search;
/* No side effect */
